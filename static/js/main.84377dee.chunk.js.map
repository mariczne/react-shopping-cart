{"version":3,"sources":["components/Header.jsx","components/Product.jsx","components/SearchBox.jsx","components/ProductDeck.jsx","components/CartItem.jsx","components/CartItemList.jsx","components/Cart.jsx","components/App.jsx","index.js"],"names":["BADGE_STYLE","width","height","Header","cart","toggleCartModal","itemsInCartCount","reduce","acc","curr","quantity","Navbar","bg","sticky","Container","Brand","href","src","className","alt","Nav","Link","Button","variant","onClick","size","Badge","style","defaltProps","CARD_STYLE","minHeight","Product","id","name","price","quantityInCart","addToCart","Col","Card","Body","Title","Subtitle","toFixed","Footer","BadgeInCart","defaultProps","SearchBox","value","onSearchChange","FormControl","type","placeholder","onChange","ProductDeck","state","searchValue","productsToShow","loadMoreProducts","setState","e","targetValue","target","filterProducts","products","length","filter","product","toLowerCase","indexOf","renderFilteredProducts","props","filteredProducts","slice","map","productInCart","find","key","this","dataState","hasMoreProducts","Row","Spinner","animation","hasMore","loadMore","loader","CardDeck","Component","CartItem","removeFromCart","DecrementButton","IncrementButton","BUTTON_STYLE","BUTTON_CLASSES","CartItemList","totalPrice","Table","responsive","striped","hover","item","colSpan","Cart","showCartModal","Modal","show","onHide","closeButton","CloseButton","CheckoutButton","DATA_STATES","App","fetchProducts","url","a","fetch","response","json","then","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84377dee.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Container, Badge, Button, Nav } from \"react-bootstrap\";\nimport { FaShoppingCart } from \"react-icons/fa\";\n\nconst APP_NAME = \"Shopping Cart\";\n\nconst BADGE_STYLE = { width: \"1.5rem\", height: \"1.5rem\" };\n\nconst BADGE_CLASSES = `d-inline-flex justify-content-center align-items-center\nrounded-circle p-0 ml-2`;\n\nexport default function Header({ cart, toggleCartModal }) {\n  const itemsInCartCount = cart.reduce((acc, curr) => acc + curr.quantity, 0);\n\n  return (\n    <Navbar bg=\"light\" sticky=\"top\">\n      <Container>\n        <Navbar.Brand href=\"#\">\n          <img\n            src=\"/logo512.png\"\n            width=\"30\"\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n            alt=\"React Shopping Cart\"\n          />\n        </Navbar.Brand>\n        <Navbar.Brand href=\"#\" className=\"d-none d-sm-inline-block\">\n          {APP_NAME}\n        </Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"https://github.com/mariczne/react-shopping-cart\">\n            GitHub repo\n          </Nav.Link>\n        </Nav>\n        <Button\n          variant={itemsInCartCount ? \"primary\" : \"outline-secondary\"}\n          className=\"text-nowrap\"\n          onClick={toggleCartModal}\n        >\n          <FaShoppingCart size=\"1.5rem\" />\n          {itemsInCartCount ? (\n            <Badge\n              style={BADGE_STYLE}\n              className={BADGE_CLASSES}\n              variant=\"light\"\n            >\n              {itemsInCartCount}\n            </Badge>\n          ) : null}\n        </Button>\n      </Container>\n    </Navbar>\n  );\n}\n\nHeader.defaltProps = {\n  cart: [],\n  toggleCartModal: () => {}\n};\n","import React from \"react\";\nimport { Card, Button, Badge, Col } from \"react-bootstrap\";\n\nconst CARD_STYLE = {\n  minHeight: \"12.5rem\"\n};\n\nconst ADD_TO_CART_TEXT = \"Add to cart\";\n\nconst IN_CART_TEXT = \"in cart\";\n\nconst CURRENCY_CODE = \"\"; // not specified in the data\n\nexport default function Product({\n  id,\n  name,\n  price,\n  quantityInCart,\n  addToCart\n}) {\n  return (\n    <Col className=\"col-sm-6 col-md-4\">\n      <Card style={CARD_STYLE} className=\"my-3 \">\n        <Card.Body className=\"d-flex flex-column justify-content-between\">\n          <Card.Title>{name}</Card.Title>\n          <Card.Subtitle>\n            {price.toFixed(2)} <small>{CURRENCY_CODE} /per item</small>\n          </Card.Subtitle>\n        </Card.Body>\n        <Card.Footer className=\"d-flex flex-row justify-content-between\">\n          <Button\n            variant=\"outline-primary\"\n            size=\"sm\"\n            onClick={() => addToCart(id)}\n          >\n            {ADD_TO_CART_TEXT}\n          </Button>\n          <BadgeInCart quantityInCart={quantityInCart} />\n        </Card.Footer>\n      </Card>\n    </Col>\n  );\n}\n\nfunction BadgeInCart({ quantityInCart }) {\n  if (quantityInCart > 0) {\n    return (\n      <Badge variant=\"success\" className=\"d-flex align-items-center\">\n        {quantityInCart} {IN_CART_TEXT}\n      </Badge>\n    );\n  }\n  return null;\n}\n\nProduct.defaultProps = {\n  id: 0,\n  name: \"\",\n  price: 0,\n  quantityInCart: 0,\n  addToCart: () => {}\n};\n","import React from \"react\";\nimport { FormControl } from \"react-bootstrap\";\n\nconst SEARCH_BOX_PLACEHOLDER = \"Search for a product\";\n\nexport default function SearchBox({ value, onSearchChange }) {\n  return (\n    <FormControl\n      type=\"text\"\n      className=\"m-3\"\n      placeholder={SEARCH_BOX_PLACEHOLDER}\n      value={value}\n      onChange={onSearchChange}\n    />\n  );\n}\n\nSearchBox.defaultProps = {\n  value: \"\",\n  onSearchChange: () => {}\n};\n","import React, { Component } from \"react\";\nimport { Row, CardDeck, Spinner } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Product from \"./Product.jsx\";\nimport SearchBox from \"./SearchBox.jsx\";\n\nconst DEFAULT_PRODUCTS_VISIBLE = 25;\nconst NO_PRODUCTS_TEXT = \"No products fitting the criteria found\";\n\nexport default class ProductDeck extends Component {\n  state = {\n    searchValue: \"\",\n    productsToShow: DEFAULT_PRODUCTS_VISIBLE\n  };\n\n  loadMoreProducts = () => {\n    this.setState(state => {\n      return {\n        productsToShow: state.productsToShow + DEFAULT_PRODUCTS_VISIBLE\n      };\n    });\n  };\n\n  onSearchChange = e => {\n    const targetValue = e.target.value;\n    this.setState({\n      searchValue: targetValue,\n      productsToShow: DEFAULT_PRODUCTS_VISIBLE\n    });\n  };\n\n  filterProducts = products => {\n    const { searchValue } = this.state;\n    if (products.length > 0) {\n      return products.filter(\n        product =>\n          product.name.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1\n      );\n    }\n    return [];\n  };\n\n  renderFilteredProducts = () => {\n    const { products, cart, addToCart } = this.props;\n    const { productsToShow } = this.state;\n\n    const filteredProducts = this.filterProducts(products).slice(\n      0,\n      productsToShow\n    );\n\n    if (filteredProducts.length === 0) {\n      return <p>{NO_PRODUCTS_TEXT}</p>;\n    }\n\n    return filteredProducts.map(product => {\n      const productInCart = cart.find(\n        productInCart => productInCart.id === product.id\n      );\n\n      return (\n        <Product\n          key={product.id}\n          id={product.id}\n          name={product.name}\n          price={product.price}\n          addToCart={addToCart}\n          quantityInCart={productInCart ? productInCart.quantity : 0}\n        />\n      );\n    });\n  };\n\n  render() {\n    const { searchValue, productsToShow } = this.state;\n    const { dataState, products } = this.props;\n    const hasMoreProducts = products.length > productsToShow;\n\n    return (\n      <>\n        <Row>\n          <SearchBox value={searchValue} onSearchChange={this.onSearchChange} />\n        </Row>\n        <Row className=\"justify-content-center\">\n          {dataState === \"loading\" ? (\n            <Spinner animation=\"border\" />\n          ) : (\n            <InfiniteScroll\n              hasMore={hasMoreProducts}\n              loadMore={this.loadMoreProducts}\n              loader={\n                <div className=\"d-flex justify-content-center\" key={0}>\n                  <Spinner animation=\"border\" />\n                </div>\n              }\n            >\n              <CardDeck>{this.renderFilteredProducts()}</CardDeck>\n            </InfiniteScroll>\n          )}\n        </Row>\n      </>\n    );\n  }\n}\n\nProductDeck.defaultProps = {\n  dataState: \"loading\",\n  products: [],\n  cart: [],\n  addToCart: () => {}\n};\n","import React from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nexport default function CartItem({\n  id,\n  name,\n  quantity,\n  price,\n  addToCart,\n  removeFromCart\n}) {\n  return (\n    <tr>\n      <td className=\"align-middle\">{name}</td>\n      <td className=\"align-middle text-right text-nowrap\">\n        <DecrementButton id={id} removeFromCart={removeFromCart} />\n        <span className=\"mx-2\">{quantity}</span>\n        <IncrementButton id={id} addToCart={addToCart} />\n      </td>\n      <td className=\"align-middle text-right\">{price.toFixed(2)}</td>\n      <td className=\"align-middle text-right\">\n        {((100 * price * quantity) / 100).toFixed(2)}\n      </td>\n    </tr>\n  );\n}\n\nCartItem.defaultProps = {\n  id: 0,\n  name: \"default product\",\n  quantity: 0,\n  price: 0,\n  addToCart: () => {},\n  removeFromCart: () => {}\n};\n\nconst BUTTON_STYLE = { width: \"1.5rem\", height: \"1.5rem\" };\n\nconst BUTTON_CLASSES = `d-inline-flex justify-content-center align-items-center\nrounded-circle p-0`;\n\nfunction IncrementButton({ id, addToCart }) {\n  return (\n    <Button\n      variant=\"outline-success\"\n      size=\"sm\"\n      style={BUTTON_STYLE}\n      className={BUTTON_CLASSES}\n      onClick={() => addToCart(id)}\n    >\n      +\n    </Button>\n  );\n}\n\nIncrementButton.defaultProps = {\n  id: 0,\n  addToCart: () => {}\n};\n\nfunction DecrementButton({ id, removeFromCart }) {\n  return (\n    <Button\n      variant=\"outline-danger\"\n      size=\"sm\"\n      style={BUTTON_STYLE}\n      className={BUTTON_CLASSES}\n      onClick={() => removeFromCart(id)}\n    >\n      -\n    </Button>\n  );\n}\n\nDecrementButton.defaultProps = {\n  id: 0,\n  removeFromCart: () => {}\n};\n","import React from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nimport CartItem from \"./CartItem.jsx\";\n\nconst NO_ITEMS_IN_CART_TEXT =\n  \"There are currently no products in the shopping cart\";\n\nexport default function CartItemList({\n  itemsInCartCount,\n  cart,\n  addToCart,\n  removeFromCart\n}) {\n  if (itemsInCartCount < 1) {\n    return NO_ITEMS_IN_CART_TEXT;\n  }\n\n  function renderCartItems() {\n    return cart.map(item => (\n      <CartItem\n        key={item.id}\n        id={item.id}\n        name={item.name}\n        price={item.price}\n        quantity={item.quantity}\n        addToCart={addToCart}\n        removeFromCart={removeFromCart}\n      />\n    ));\n  }\n\n  const totalPrice =\n    cart.reduce((acc, curr) => acc + curr.price * 100 * curr.quantity, 0) / 100;\n\n  return (\n    <Table responsive striped hover size=\"sm\">\n      <thead>\n        <tr>\n          <th className=\"text-left\">Product name</th>\n          <th className=\"text-right\">Quantity</th>\n          <th className=\"text-right\">Price per item</th>\n          <th className=\"text-right\">Total item value</th>\n        </tr>\n      </thead>\n      <tbody>{renderCartItems()}</tbody>\n      <tfoot>\n        <tr>\n          <th colSpan=\"4\" className=\"text-right\">\n            Total order value: {totalPrice.toFixed(2)}\n          </th>\n        </tr>\n      </tfoot>\n    </Table>\n  );\n}\n\nCartItemList.defaultProps = {\n  cart: [],\n  addToCart: () => {},\n  removeFromCart: () => {}\n};\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { FaShoppingCart } from \"react-icons/fa\";\nimport CartItemList from \"./CartItemList.jsx\";\n\nconst MODAL_TITLE = `Your shopping cart`;\nconst CLOSE_BTN_TEXT = \"Close cart\";\nconst CHECKOUT_BTN_TEXT = \"To checkout\";\n\nexport default function Cart({\n  showCartModal,\n  toggleCartModal,\n  cart,\n  addToCart,\n  removeFromCart\n}) {\n  const itemsInCartCount = cart.length;\n\n  return (\n    <Modal show={showCartModal} onHide={toggleCartModal} size=\"lg\">\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <FaShoppingCart size=\"2.5rem\" /> {MODAL_TITLE}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <CartItemList\n          itemsInCartCount={itemsInCartCount}\n          cart={cart}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n        />\n      </Modal.Body>\n      <Modal.Footer>\n        <CloseButton toggleCartModal={toggleCartModal} />\n        <CheckoutButton itemsInCartCount={itemsInCartCount} />\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nCart.defaultProps = {\n  showCartModal: false,\n  toggleCartModal: () => {},\n  cart: [],\n  addToCart: () => {},\n  removeFromCart: () => {}\n};\n\nfunction CloseButton({ toggleCartModal }) {\n  return (\n    <Button variant=\"outline-secondary\" onClick={toggleCartModal}>\n      {CLOSE_BTN_TEXT}\n    </Button>\n  );\n}\n\nCloseButton.defaultProps = {\n  toggleCartModal: () => {}\n};\n\nfunction CheckoutButton({ itemsInCartCount }) {\n  if (itemsInCartCount > 0) {\n    return <Button variant=\"success\">{CHECKOUT_BTN_TEXT}</Button>;\n  }\n  return null;\n}\n\nCheckoutButton.defaultProps = {\n  itemsInCartCount: 0\n};\n","import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Header from \"./Header.jsx\";\nimport ProductDeck from \"./ProductDeck.jsx\";\nimport Cart from \"./Cart.jsx\";\n\nconst API_URL = // bypassing CORS via proxy for now\n  \"https://cors-anywhere.herokuapp.com/https://www.reasonapps.pl/data.json\";\n\nconst DATA_STATES = { loading: \"loading\", loaded: \"loaded\" };\n\nexport default class App extends Component {\n  state = {\n    dataState: DATA_STATES.loading,\n    showCartModal: false,\n    products: [],\n    cart: []\n  };\n\n  componentDidMount() {\n    this.fetchProducts(API_URL).then(products =>\n      this.setState({ products, dataState: DATA_STATES.loaded })\n    );\n  }\n\n  fetchProducts = async url => {\n    const response = await fetch(url);\n    const products = await response.json();\n    return products;\n  };\n\n  toggleCartModal = () => {\n    this.setState(state => {\n      return {\n        showCartModal: !state.showCartModal\n      };\n    });\n  };\n\n  addToCart = id => {\n    this.setState(state => {\n      const { cart, products } = state;\n      const isProductAlreadyInCart = !!cart.find(\n        productInCart => productInCart.id === id\n      );\n\n      if (isProductAlreadyInCart) {\n        return {\n          cart: cart.map(productInCart => {\n            if (productInCart.id === id) {\n              return { ...productInCart, quantity: productInCart.quantity + 1 };\n            }\n            return productInCart;\n          })\n        };\n      }\n\n      const product = products.find(product => product.id === id);\n      return { cart: [...cart, { ...product, quantity: 1 }] };\n    });\n  };\n\n  removeFromCart = id => {\n    this.setState(state => {\n      const { cart } = state;\n      const productInCart = cart.find(productInCart => productInCart.id === id);\n\n      if (productInCart) {\n        if (productInCart.quantity < 2) {\n          return {\n            cart: cart.filter(productInCart => productInCart.id !== id)\n          };\n        }\n\n        return {\n          cart: cart.map(productInCart => {\n            if (productInCart.id === id) {\n              return { ...productInCart, quantity: productInCart.quantity - 1 };\n            }\n            return productInCart;\n          })\n        };\n      }\n    });\n  };\n\n  render() {\n    const { dataState, products, cart, showCartModal } = this.state;\n\n    return (\n      <>\n        <Header cart={cart} toggleCartModal={this.toggleCartModal} />\n        <Cart\n          showCartModal={showCartModal}\n          toggleCartModal={this.toggleCartModal}\n          cart={cart}\n          addToCart={this.addToCart}\n          removeFromCart={this.removeFromCart}\n        />\n        <Container>\n          <Row>\n            <Col>\n              <ProductDeck\n                dataState={dataState}\n                products={products}\n                cart={cart}\n                addToCart={this.addToCart}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}